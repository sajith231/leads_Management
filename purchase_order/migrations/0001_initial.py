# Generated by Django 5.2.3 on 2025-10-31 11:51

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Department Name')),
                ('address', models.TextField(default='Not Provided', verbose_name='Department Address')),
                ('city', models.CharField(default='Not Provided', max_length=60, verbose_name='City')),
                ('state', models.CharField(default='Not Provided', max_length=60, verbose_name='State')),
                ('pincode', models.CharField(default='Not Provided', max_length=20, verbose_name='Pincode')),
                ('contact_number', models.CharField(default='Not Provided', max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Contact Number')),
                ('alternate_number', models.CharField(blank=True, default='Not Provided', max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Alternate Number')),
                ('email', models.EmailField(blank=True, default='Not Provided', max_length=100, verbose_name='Email ID')),
                ('gst_number', models.CharField(blank=True, default='Not Provided', help_text='15-character GST Number', max_length=15, verbose_name='GST Number')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('unit_of_measure', models.CharField(default='pcs', max_length=50)),
                ('tax_percentage', models.DecimalField(choices=[(Decimal('5.00'), '5%'), (Decimal('18.00'), '18%'), (Decimal('28.00'), '28%')], decimal_places=2, default=Decimal('18.00'), max_digits=5, verbose_name='Tax Percentage')),
                ('mrp', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Maximum Retail Price')),
                ('purchase_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Purchase Price')),
                ('cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Cost Price')),
                ('hsn_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='HSN Code')),
                ('unit_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, help_text='Department this item belongs to', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='items', to='purchase_order.department', verbose_name='Department')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_number', models.CharField(help_text='Unique Purchase Order Number', max_length=50, unique=True, verbose_name='PO Number')),
                ('po_date', models.DateField(verbose_name='PO Date')),
                ('reference_number', models.CharField(blank=True, help_text='Quotation or Reference Number', max_length=100, verbose_name='Reference Number')),
                ('delivery_date', models.DateField(verbose_name='Expected Delivery Date')),
                ('client_details', models.TextField(default='', verbose_name='Client Details')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Total Amount')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Tax Amount')),
                ('grand_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Grand Total')),
                ('payment_terms', models.CharField(choices=[('NET_30', 'Net 30 Days'), ('NET_60', 'Net 60 Days'), ('COD', 'Cash on Delivery'), ('ADVANCE', 'Advance Payment'), ('CREDIT', 'Credit')], default='NET_30', max_length=20, verbose_name='Payment Terms')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('DELIVERED', 'Delivered'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20, verbose_name='PO Status')),
                ('admin_status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', help_text='Administrative approval status for this purchase order', max_length=20, verbose_name='Admin Approval Status')),
                ('admin_approved_by', models.CharField(blank=True, max_length=100, verbose_name='Approved By')),
                ('admin_approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Approval Date')),
                ('admin_rejection_reason', models.TextField(blank=True, verbose_name='Rejection Reason')),
                ('calculation_method', models.CharField(choices=[('PLUS_TAX', 'Plus Tax (Add tax on base amount)'), ('REVERSE_TAX', 'Reverse Tax (Extract tax from total)')], default='PLUS_TAX', help_text='Plus Tax: Add tax to base price | Reverse Tax: Extract tax from inclusive price', max_length=20, verbose_name='Calculation Method')),
                ('notes', models.TextField(blank=True, verbose_name='Additional Notes')),
                ('created_by', models.CharField(blank=True, help_text='User who created this supplier', max_length=100, verbose_name='Created By')),
                ('updated_by', models.CharField(blank=True, help_text='User who last updated this supplier', max_length=100, verbose_name='Last Updated By')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Status')),
                ('department', models.ForeignKey(blank=True, help_text='Department making the purchase', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='purchase_orders', to='purchase_order.department', verbose_name='Buyer Department')),
            ],
            options={
                'verbose_name': 'Purchase Order',
                'verbose_name_plural': 'Purchase Orders',
                'ordering': ['-po_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Quantity')),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, help_text='Inclusive or exclusive price depending on calculation method', max_digits=12, verbose_name='Unit Price')),
                ('entry_rate', models.DecimalField(decimal_places=2, default=0, help_text='Base price after tax extraction (for Reverse Tax method)', max_digits=12, verbose_name='Entry Rate')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Discount')),
                ('tax_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Tax Percentage')),
                ('line_total', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Line Total')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='purchase_order.department')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='purchase_order.item')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='po_items', to='purchase_order.purchaseorder')),
            ],
            options={
                'verbose_name': 'Purchase Order Item',
                'verbose_name_plural': 'Purchase Order Items',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='Supplier Name')),
                ('address', models.TextField(verbose_name='Address')),
                ('places', models.CharField(blank=True, max_length=120, verbose_name='Place/Landmark')),
                ('city', models.CharField(max_length=60, verbose_name='City')),
                ('state', models.CharField(max_length=60, verbose_name='State')),
                ('mobile_no', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Mobile Number')),
                ('alternate_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Alternate Number')),
                ('gst_number', models.CharField(blank=True, help_text='15-character GST Number', max_length=15, verbose_name='GST Number')),
                ('contact_person_name', models.CharField(blank=True, help_text='Primary contact person at supplier', max_length=100, verbose_name='Contact Person Name')),
                ('created_by', models.CharField(blank=True, help_text='User who created this supplier', max_length=100, verbose_name='Created By')),
                ('updated_by', models.CharField(blank=True, help_text='User who last updated this supplier', max_length=100, verbose_name='Last Updated By')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Status')),
                ('department', models.ForeignKey(blank=True, help_text='Department associated with this supplier', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='suppliers', to='purchase_order.department', verbose_name='Department')),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_orders', to='purchase_order.supplier', verbose_name='Supplier'),
        ),
    ]
