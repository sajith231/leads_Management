# Generated by Django 4.2.7 on 2025-10-22 12:32

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_number', models.CharField(max_length=20, unique=True)),
                ('owner_name', models.CharField(max_length=100)),
                ('fuel_type', models.CharField(choices=[('petrol', 'Petrol'), ('diesel', 'Diesel')], default='petrol', help_text='Type of fuel used by the vehicle', max_length=10)),
                ('fuel_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Current fuel rate in rupees per liter', max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('rc_copy', models.FileField(blank=True, null=True, upload_to='docs/rc/')),
                ('insurance_copy', models.FileField(blank=True, null=True, upload_to='docs/ins/')),
                ('pollution_copy', models.FileField(blank=True, null=True, upload_to='docs/pol/')),
                ('avg_mileage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Average mileage in km/l', max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FuelEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date of the trip')),
                ('start_time', models.TimeField(blank=True, help_text='Trip start time', null=True)),
                ('end_time', models.TimeField(blank=True, help_text='Trip end time', null=True)),
                ('trip_from', models.CharField(blank=True, default='', help_text='Starting point of the trip', max_length=100)),
                ('trip_to', models.CharField(blank=True, default='', help_text='Destination point of the trip', max_length=100)),
                ('fuel_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total cost of the fuel', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('odo_start_reading', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Odometer reading before the trip', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('odo_end_reading', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Odometer reading after the trip', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('odo_start_image', models.ImageField(blank=True, null=True, upload_to='odo_images/start/')),
                ('odo_end_image', models.ImageField(blank=True, null=True, upload_to='odo_images/end/')),
                ('fuel_quantity', models.DecimalField(decimal_places=3, default=Decimal('0.000'), help_text='Fuel quantity filled in liters', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.000'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('travelled_by', models.ForeignKey(blank=True, help_text='User who performed the trip', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fuel_trips', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(blank=True, help_text='Link this fuel entry to a vehicle', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fuel_entries', to='fuel_management.vehicle')),
            ],
            options={
                'verbose_name_plural': 'Fuel Entries',
                'ordering': ['-date', '-created_at'],
            },
        ),
    ]
