# Generated by Django 5.2.3 on 2025-10-31 07:33

import ckeditor.fields
import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('software_master', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('firm_name', models.CharField(blank=True, max_length=150)),
                ('business_type', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=100)),
                ('contact_number', models.CharField(max_length=15)),
                ('remarks', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BusinessType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Credential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('visibility', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('all', 'All Users'), ('normal', 'Normal User'), ('admin_level', 'Admin Level User'), ('3level', '3 Level User'), ('4level', '4 Level User')], max_length=20), blank=True, default=list, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='DefaultSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_menus', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Default Setting',
                'verbose_name_plural': 'Default Settings',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('photo', models.ImageField(upload_to='employees/')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_personal', models.CharField(max_length=15)),
                ('phone_residential', models.CharField(blank=True, max_length=15, null=True)),
                ('place', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=100)),
                ('education', models.CharField(max_length=100)),
                ('experience', models.CharField(blank=True, max_length=100, null=True)),
                ('job_title', models.CharField(max_length=100)),
                ('organization', models.CharField(blank=True, choices=[('', 'Select Organization'), ('IMC', 'IMC'), ('SYSMAC', 'SYSMAC')], max_length=10, null=True)),
                ('joining_date', models.DateField()),
                ('dob', models.DateField()),
                ('experience_start_date', models.DateField(blank=True, null=True)),
                ('experience_end_date', models.DateField(blank=True, null=True)),
                ('bank_account_number', models.CharField(blank=True, max_length=20, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('branch', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('on_leave', 'On Leave')], default='active', max_length=20)),
                ('duty_time_start', models.TimeField(blank=True, null=True)),
                ('duty_time_end', models.TimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hardware',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('specification', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OfficialDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ReminderType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('customer', models.CharField(max_length=200)),
                ('complaint', models.TextField()),
                ('remarks', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Solved', 'Solved')], default='Pending', max_length=20)),
                ('mode_of_service', models.CharField(choices=[('Online', 'Online'), ('Onsite', 'Onsite')], default='Onsite', max_length=20)),
                ('service_type', models.CharField(choices=[('Hardware', 'Hardware'), ('Software', 'Software')], default='Software', max_length=20)),
                ('place', models.CharField(max_length=200)),
                ('duration', models.CharField(blank=True, max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ServiceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(editable=False, max_length=100, unique=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('customer_name', models.CharField(max_length=200)),
                ('place', models.CharField(blank=True, max_length=255, null=True)),
                ('complaint_type', models.CharField(choices=[('software', 'Software'), ('hardware', 'Hardware')], max_length=20)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('voice_note', models.FileField(blank=True, null=True, upload_to='service_log_voice_notes/')),
                ('status', models.CharField(default='Pending', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('complaint_type', models.CharField(choices=[('software', 'Software'), ('hardware', 'Hardware'), ('both', 'Both')], default='software', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('software', models.ManyToManyField(blank=True, related_name='complaints', to='software_master.software')),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='areas', to='app1.district')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DocumentSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('url', models.URLField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='document_settings/')),
                ('position', models.IntegerField(default=0)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='app1.document')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='DocumentSettingField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=255)),
                ('field_value', models.TextField()),
                ('purpose', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='field_attachments/')),
                ('position', models.IntegerField(default=0)),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='app1.documentsetting')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='EarlyRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('early_time', models.TimeField()),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.employee')),
            ],
        ),
        migrations.CreateModel(
            name='BreakTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('break_punch_in', models.DateTimeField(blank=True, null=True)),
                ('break_punch_out', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('day', models.IntegerField()),
                ('status', models.CharField(choices=[('initial', 'Not Marked'), ('full', 'Full Day'), ('half', 'Half Day'), ('leave', 'Leave'), ('work_from_home', 'Work From Home')], default='initial', max_length=20)),
                ('punch_in', models.DateTimeField(blank=True, null=True)),
                ('punch_out', models.DateTimeField(blank=True, null=True)),
                ('punch_in_location', models.CharField(blank=True, max_length=255, null=True)),
                ('punch_out_location', models.CharField(blank=True, max_length=255, null=True)),
                ('punch_in_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('punch_in_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('punch_out_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('punch_out_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('note', models.TextField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='employee_attachments/')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='app1.employee')),
            ],
        ),
        migrations.CreateModel(
            name='CV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('place', models.CharField(max_length=255)),
                ('district', models.CharField(choices=[('Alappuzha', 'Alappuzha'), ('Ernakulam', 'Ernakulam'), ('Idukki', 'Idukki'), ('Kannur', 'Kannur'), ('Kasaragod', 'Kasaragod'), ('Kollam', 'Kollam'), ('Kottayam', 'Kottayam'), ('Kozhikode', 'Kozhikode'), ('Malappuram', 'Malappuram'), ('Palakkad', 'Palakkad'), ('Pathanamthitta', 'Pathanamthitta'), ('Thiruvananthapuram', 'Thiruvananthapuram'), ('Thrissur', 'Thrissur'), ('Wayanad', 'Wayanad'), ('Other', 'Other')], max_length=255)),
                ('education', models.CharField(max_length=255)),
                ('experience', models.TextField()),
                ('dob', models.DateField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('cv_attachment', models.FileField(upload_to='cv_attachments/')),
                ('interview_status', models.BooleanField(default=False)),
                ('interview_date', models.DateTimeField(blank=True, null=True)),
                ('selected', models.BooleanField(default=False)),
                ('gender', models.CharField(blank=True, choices=[('', ''), ('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app1.agent')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_cvs', to=settings.AUTH_USER_MODEL)),
                ('job_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.jobtitle')),
            ],
        ),
        migrations.CreateModel(
            name='LateRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('delay_time', models.CharField(default='0 minutes', max_length=50)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.employee')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firm_name', models.CharField(max_length=200)),
                ('customer_name', models.CharField(max_length=100)),
                ('contact_number', models.CharField(max_length=20)),
                ('landmark', models.CharField(max_length=200)),
                ('business_nature', models.CharField(choices=[('', 'Select'), ('Agency/Distribution', 'Agency/Distribution'), ('Auto Mobiles', 'Auto Mobiles'), ('Bakery', 'Bakery'), ('Boutique', 'Boutique'), ('clinic', 'Clinic'), ('footware', 'Footware'), ('hardware', 'Hardware'), ('hospital', 'Hospital'), ('Hotels/ Resorts', 'Hotels/ Resorts'), ('Hyper Market', 'Hyper Market'), ('Jewellery', 'Jewellery'), ('Lab', 'Lab'), ('Opticals', 'Opticals'), ('Pharmacy', 'Pharmacy'), ('production', 'Production'), ('real estate', 'Real Estate'), ('restaurant', 'Restaurant'), ('retail', 'Retail'), ('School', 'School'), ('supermarket', 'Supermarket'), ('textile', 'Textile'), ('Travels', 'Travels'), ('wholesale', 'Wholesale'), ('another', 'Another')], default='', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('quotation_required', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='lead_images/')),
                ('document', models.FileField(blank=True, null=True, upload_to='lead_documents/')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('planet_entry', models.BooleanField(default=False)),
                ('voice_note', models.FileField(blank=True, null=True, upload_to='voice_notes/')),
                ('added_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('added_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leads', to='app1.area')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leads', to='app1.district')),
                ('hardwares', models.ManyToManyField(blank=True, related_name='leads', to='app1.hardware')),
            ],
        ),
        migrations.CreateModel(
            name='LeadHardwarePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_price', models.FloatField()),
                ('hardware', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.hardware')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hardware_prices', to='app1.lead')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('leave_type', models.CharField(choices=[('full_day', 'Full Day'), ('half_day', 'Half Day')], default='full_day', max_length=20)),
                ('reason', models.TextField()),
                ('note', models.TextField(default='')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.employee')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_leave_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='app1.area')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='app1.district')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='lead',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leads', to='app1.location'),
        ),
        migrations.CreateModel(
            name='OfferLetterDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('department', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('salary', models.CharField(blank=True, max_length=255, null=True)),
                ('notice_period', models.PositiveIntegerField(default=0)),
                ('cv', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='offer_letter_details', to='app1.cv')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentCredential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('additional_fields', models.JSONField(blank=True, default=list)),
                ('credential', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.credential')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.officialdocument')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=200)),
                ('languages', models.CharField(max_length=200)),
                ('technologies', models.CharField(max_length=200)),
                ('notes', ckeditor.fields.RichTextField()),
                ('database_name', models.CharField(max_length=100)),
                ('domain_name', models.CharField(max_length=100)),
                ('domain_platform', models.CharField(max_length=100)),
                ('github_link', models.URLField()),
                ('client', models.CharField(default='', max_length=200)),
                ('project_status', models.CharField(choices=[('Active', 'Active'), ('On Hold', 'On Hold'), ('Cancel', 'Cancel'), ('In Progress', 'In Progress'), ('Finish', 'Finish'), ('Inactive', 'Inactive')], default='Active', max_length=20)),
                ('project_type', models.CharField(choices=[('Website', 'Website'), ('Web Application', 'Web Application'), ('Mobile Application', 'Mobile Application')], max_length=50)),
                ('project_duration', models.CharField(max_length=50)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('assigned_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app1.employee')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('deadline', models.DateField()),
                ('client', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('started', 'Started'), ('in_progress', 'In Progress'), ('on_hold', 'On Hold'), ('canceled', 'Canceled'), ('finished', 'Finished')], default='not_started', max_length=20)),
                ('members', models.ManyToManyField(related_name='project_works', to='app1.employee')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_works', to='app1.project')),
            ],
            options={
                'ordering': ['deadline'],
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowledge', models.IntegerField(blank=True, null=True)),
                ('confidence', models.IntegerField(blank=True, null=True)),
                ('attitude', models.IntegerField(blank=True, null=True)),
                ('communication', models.IntegerField(blank=True, null=True)),
                ('appearance', models.IntegerField(blank=True, null=True)),
                ('languages', models.JSONField(blank=True, default=list)),
                ('expected_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('experience', models.CharField(blank=True, max_length=255, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('voice_note', models.FileField(blank=True, null=True, upload_to='voice_notes/')),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.cv')),
            ],
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('no', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('remark', models.TextField(blank=True, null=True)),
                ('remind_date', models.DateField()),
                ('entry_date', models.DateTimeField(auto_now_add=True)),
                ('event_date', models.DateField(blank=True, null=True)),
                ('added_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_reminders', to=settings.AUTH_USER_MODEL)),
                ('responsible_persons', models.ManyToManyField(blank=True, related_name='reminders', to='app1.employee')),
                ('reminder_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.remindertype')),
            ],
        ),
        migrations.CreateModel(
            name='LeadRequirementAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirement_amounts', to='app1.lead')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.requirement')),
            ],
        ),
        migrations.AddField(
            model_name='lead',
            name='requirements',
            field=models.ManyToManyField(to='app1.requirement'),
        ),
        migrations.CreateModel(
            name='ServiceLogComplaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('In Progress', 'In Progress'), ('Completed', 'Completed')], default='Pending', max_length=20)),
                ('assigned_date', models.DateTimeField(auto_now_add=True)),
                ('started_time', models.DateTimeField(blank=True, null=True)),
                ('completed_time', models.DateTimeField(blank=True, null=True)),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('complaint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.complaint')),
                ('service_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.servicelog')),
            ],
        ),
        migrations.AddField(
            model_name='servicelog',
            name='complaints',
            field=models.ManyToManyField(through='app1.ServiceLogComplaint', to='app1.complaint'),
        ),
        migrations.CreateModel(
            name='ComplaintImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='complaint_images/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('complaint_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='app1.servicelogcomplaint')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('deadline_date', models.DateField()),
                ('status', models.CharField(choices=[('Not Started', 'Not Started'), ('Started', 'Started'), ('On Hold', 'On Hold'), ('In Progress', 'In Progress'), ('Cancel', 'Cancel')], default='Not Started', max_length=20)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tasks', to='app1.employee')),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app1.employee')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.project')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('userid', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('user_level', models.CharField(choices=[('normal', 'Normal User'), ('admin_level', 'Admin Level User'), ('3level', '3 level'), ('4level', '4 level'), ('5level', '5 level')], default='normal', max_length=20)),
                ('image', models.ImageField(blank=True, null=True, upload_to='user_images/')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10)),
                ('allowed_menus', models.TextField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.branch')),
            ],
        ),
    ]
