# Generated by Django 5.2.3 on 2025-10-31 12:13

import app5.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app1', '0002_initial'),
        ('app2', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceBilling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_no', models.CharField(max_length=20)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('customer_name', models.CharField(max_length=100)),
                ('customer_contact', models.CharField(max_length=15)),
                ('customer_address', models.TextField()),
                ('technician', models.CharField(max_length=100)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('partial', 'Partial Payment')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service Billing',
                'verbose_name_plural': 'Service Billings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('place', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='JobCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_no', models.CharField(blank=True, max_length=20, unique=True)),
                ('customer', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('logged', 'Logged'), ('sent_technician', 'Sent To Technician'), ('accepted', 'In Technician Hand'), ('pending', 'Pending'), ('completed', 'Completed'), ('returned', 'Returned'), ('rejected', 'Rejected')], default='logged', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('technician', models.CharField(blank=True, max_length=100, null=True)),
                ('assigned_date', models.DateTimeField(blank=True, null=True)),
                ('self_assigned', models.BooleanField(default=False, help_text='True if the job was self-assigned by the creator')),
                ('standby_issued', models.BooleanField(default=False, help_text='Whether standby equipment was issued')),
                ('items_data', models.JSONField(blank=True, default=list, help_text='Stores array of items with their complaints')),
                ('completion_details', models.JSONField(blank=True, default=dict, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobcards', to='app1.user')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobCardImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='jobcard_images/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('item_index', models.IntegerField(default=0, help_text='Index of item in items_data array')),
                ('complaint_index', models.IntegerField(default=0, help_text='Index of complaint within item')),
                ('jobcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='app5.jobcard')),
            ],
            options={
                'ordering': ['item_index', 'complaint_index', 'uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ReturnItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_date', models.DateField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('returned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Return Item',
                'verbose_name_plural': 'Return Items',
                'ordering': ['-return_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReturnImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=app5.models.return_image_upload_path)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('return_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='app5.returnitem')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=100)),
                ('serial_no', models.CharField(blank=True, max_length=50, null=True)),
                ('service_description', models.TextField()),
                ('charge', models.DecimalField(decimal_places=2, max_digits=10)),
                ('billing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_items', to='app5.servicebilling')),
            ],
        ),
        migrations.CreateModel(
            name='StandbyIssuance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issued_to', models.CharField(max_length=200)),
                ('issued_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('expected_return_date', models.DateTimeField()),
                ('actual_return_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('issued', 'Issued'), ('returned', 'Returned'), ('lost', 'Lost'), ('damaged', 'Damaged')], default='issued', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('condition_on_issue', models.TextField(blank=True, help_text='Condition notes when issued')),
                ('condition_on_return', models.TextField(blank=True, help_text='Condition notes when returned')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('issued_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issued_standby_items', to='app1.user')),
                ('job_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standby_issuances', to='app5.jobcard')),
                ('standby_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issuances', to='app2.standbyitem')),
            ],
            options={
                'verbose_name': 'Standby Issuance',
                'verbose_name_plural': 'Standby Issuances',
                'ordering': ['-issued_date'],
            },
        ),
        migrations.CreateModel(
            name='WarrantyTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_no', models.CharField(max_length=50, unique=True)),
                ('selected_item', models.CharField(max_length=200)),
                ('item_serial', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('submitted', 'Sent to Supplier'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('issue_description', models.TextField(blank=True, null=True)),
                ('supplier_response', models.TextField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('jobcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warranty_tickets', to='app5.jobcard')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='warranty_tickets', to='app5.supplier')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WarrantyItemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('performed_by', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('warranty_ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='app5.warrantyticket')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='returnitem',
            name='warranty_ticket',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='return_item', to='app5.warrantyticket'),
        ),
        migrations.AddConstraint(
            model_name='warrantyticket',
            constraint=models.UniqueConstraint(condition=models.Q(('status__in', ['pending', 'submitted', 'approved'])), fields=('selected_item', 'item_serial', 'status'), name='unique_active_warranty_per_item'),
        ),
    ]
